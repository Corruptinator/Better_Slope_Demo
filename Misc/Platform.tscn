[gd_scene load_steps=8 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends StaticBody


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	get_node(\"AnimationPlayer\").play(\"moving\")
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _physics_process(delta):
	#rotation.y += .01
	#rotation.x += .003
#	print($RayCast.get_collision_point())
	pass
"

[sub_resource type="CubeMesh" id=2]

[sub_resource type="BoxShape" id=3]

[sub_resource type="Animation" id=4]
resource_name = "moving"
length = 7.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}

[sub_resource type="GDScript" id=5]
script/source = "extends Spatial


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
var player = Vector3(0,0,0)


# Called when the node enters the scene tree for the first time.
func _ready():
	get_node(\"Spinner/RayCast/Sprite3D\").set_as_toplevel(true)
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _physics_process(delta):
	for i in get_tree().get_nodes_in_group(\"Player\"):
		player = i.global_transform.origin
	
	get_node(\"Spinner\").look_at(player,Vector3.UP)
	
	global_transform.origin = get_node(\"../StaticBody\").global_transform.origin
	global_transform.basis = get_node(\"../StaticBody\").global_transform.basis
	#print($Spinner/RayCast.get_collision_point())
#	if $Spinner/RayCast.get_collider().get_node(\"../\").name == get_node(\"../\").name:
#		get_node(\"Spinner/RayCast/Sprite3D\").global_transform.origin = $Spinner/RayCast.get_collision_point()
	pass
"

[sub_resource type="SpatialMaterial" id=6]
flags_transparent = true
params_billboard_mode = 1
params_billboard_keep_scale = true
albedo_texture = ExtResource( 1 )

[node name="Platform" type="Spatial"]

[node name="StaticBody" type="StaticBody" parent="." groups=[
"Platform",
]]
collision_layer = 1025
collision_mask = 1025
script = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="StaticBody"]
mesh = SubResource( 2 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="StaticBody"]
shape = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="StaticBody"]
anims/moving = SubResource( 4 )

[node name="Position3D" type="Position3D" parent="StaticBody"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )

[node name="Raycaster" type="Spatial" parent="."]
script = SubResource( 5 )

[node name="Spinner" type="Spatial" parent="Raycaster"]

[node name="RayCast" type="RayCast" parent="Raycaster/Spinner"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, -10 )
enabled = true
cast_to = Vector3( 0, -10, 0 )
collision_mask = 1024

[node name="Sprite3D" type="Sprite3D" parent="Raycaster/Spinner/RayCast"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0 )
visible = false
material_override = SubResource( 6 )
texture = ExtResource( 1 )
